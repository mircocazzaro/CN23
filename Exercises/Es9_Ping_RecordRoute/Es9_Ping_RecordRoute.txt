
The IP datagram built by the program ping.c developed in class includes a header with the minimum possible length (20 characters), i.e., with no optional fields. The IP protocol allows extending the IP header, adding some optional fields that allow requesting or sending additional information to the network nodes through which the packet passes. We now intend to explore this possibility.

Modify it, in such a way that it constructs the IP datagram by adding the optional "Record Route" field to the IP header (described in RFC 791, see below). This field reserves a free area (called route data) inside the extended IP header, intended to contain the list of IP addresses of the nodes crossed by the packet. Each node crossed, in fact, in the presence of the "Record Route" option, should append its IP address in the area route data to the IP addresses list already saved by the previous nodes. The fields length and pointer allow you to manage the memory area during the packet trip, as reported in the text taken from RFC 791:  

Record Route 

        + -------- + -------- + -------- + --------- // -------- +
        | 00000111 | length | pointer | route data |
        + -------- + -------- + -------- + --------- // -------- +
          Type = 7

        The record route option provides a means to record the route of
        an internet datagram.

        The option begins with the option type code. The second octet
        is the option length which includes the option type code and the
        length octet, the pointer octet, and length - 3 octets of route
        data. The third octet is the pointer into the route data
        indicating the octet which begins the next area to store a route
        address. The pointer is relative to this option, and the
        smallest legal value for the pointer is 4.

        A recorded route is composed of a series of internet addresses.
        Each internet address is 32 bits or 4 octets. If the pointer is
        greater than the length, the recorded route data area is full.
        The originating host must compose this option with a large
        enough route data area to hold all the address expected. The
        size of the option does not change due to adding addresses. The
        title contents of the route data area must be zero.

        When an internet module routes a datagram it checks to see if
        the record route option is present. If it is, it inserts its
        own internet address as known in the environment into which this
        datagram is being forwarded into the recorded route begining at
        the octet indicated by the pointer, and increments the pointer
        by four.

        If the route data area is already full (the pointer exceeds the
        length) the datagram is forwarded without inserting the address
        into the recorded route. If there is some room but not enough
        room for a full address to be inserted, the original datagram is
        considered to be in error and is discarded. In either case an
        ICMP parameter problem message may be sent to the source host.       


The candidate will know that he has well formed the extended IP header, if he verifies that the echo reply returnfrom the destination will bring the option "Record Route" in the IP header containing in the "route data" field the list of IP addresses of the nodes traversed during the echo request process. 

 For the purpose of carrying out the task, also keep in mind the following:
    • Reserve the maximum possible size of bytes in this field, taking into account all the constraints of the IP standard
    • Send the packet to node 147.162.2.100
    • If the option is not formed correctly, the first intermediate node that recognizes an error sends to our node an ICMP type 12 message (0xC) described by RFC792 (see below)

0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
   | Type | Code | Checksum |
   + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
   | Pointer | unused |
   + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +
   | Internet Header + 64 bits of Original Data Datagram |
   + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +

   IP Fields:

   Destination Address

      The source network and address from the original datagram's data.

   ICMP Fields:

   Type

      12

   Code

      0 = pointer indicates the error.

   Checksum

      The checksum is the 16-bit ones's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum, the checksum field should be zero.
      This checksum may be replaced in the future.

   Pointer

      If code = 0, identifies the octet where an error was detected.

   Internet Header + 64 bits of Data Datagram

      The internet header plus the first 64 bits of the original
      datagram's data. This data is used by the host to match the
      message to the appropriate process. If a higher level protocol
      uses port numbers, they are assumed to be in the first 64 data
      bits of the original datagram's data.

   Description

      If the gateway or host processing a datagram finds a problem with
      the header parameters such that it cannot complete processing the
      datagram it must discard the datagram. One potential source of
      such a problem is with incorrect arguments in an option. The
      gateway or host may also notify the source host via the parameter
      problem message. This message is only sent if the error caused
      the datagram to be discarded.

      The pointer identifies the octet of the original datagram's header
      where the error was detected (it may be in the middle of an
      option). For example, 1 indicates something is wrong with the
      Type of Service, and (if there are options present) 20 indicates
      something is wrong with the type code of the first option.